datasource db {
  provider = "postgresql" // ou "postgresql" / "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ROLE {
  RESIDENT
  DOORMAN
  MANAGER
  OWNER
  ADMIN
}

model Condominium {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  cnpj      String   @unique
  contact   String
  email     String   @unique
  phone     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]
  residents Resident[]

  Apartment Apartment[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      ROLE     @default(RESIDENT)

  firstAccess Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  condominiumId  Int
  condominium    Condominium   @relation(fields: [condominiumId], references: [id])

  Resident Resident[]
}

model Resident {
  id        Int      @id @default(autoincrement())
  condominiumId  Int
  apartmentId    Int
  
  name      String
  cpf       String   @unique

  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])

  condominium    Condominium   @relation(fields: [condominiumId], references: [id])
  apartment      Apartment     @relation(fields: [apartmentId], references: [id])
  Delivery Delivery[]
}

model Apartment {
  id        Int      @id @default(autoincrement())
  number    String
  block     String
  condominiumId  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  condominium    Condominium   @relation(fields: [condominiumId], references: [id])

  Resident Resident[]
}

model Delivery {
  id          Int      @id @default(autoincrement())
  description String
  enterprise  String
  deliveryCode String

  createdAt   DateTime @default(now())
  deliveredAt  DateTime?
  residentId  Int
  status      String   @default("PENDING")

  resident    Resident @relation(fields: [residentId], references: [id])
}

model Visitor {
  id          Int      @id @default(autoincrement())
  name        String
  cpf         String   @unique

  visitDate   DateTime
  exitTime    DateTime?
}